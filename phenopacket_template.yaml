prefixes:
  dcterms: http://purl.org/dc/terms/
  sh: http://www.w3.org/ns/shacl#
  rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns#
  rdfs: http://www.w3.org/2000/01/rdf-schema#
  xsd: http://www.w3.org/2001/XMLSchema#
  obo: http://purl.obolibrary.org/obo/
  sio: http://semanticscience.org/resource/
  phenop: https://phenopackets.org/
mappings:
  Biosample:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :biosample_$(IDENTIFIER)
    po:
    - p: dcterms:identifier
      o:
        value: $(IDENTIFIER)[1..1]
        datatype: xsd:string
    - p: phenop:individual_id
      o:
        value: $(INDIVIDUAL_ID)[0..1]
        datatype: xsd:string
    - p: phenop:derived_from_id
      o:
        value: $(DERIVED_FROM_ID)[0..1]
        datatype: xsd:string
    - p: dcterms:description
      o:
        value: $(DESCRIPTION)[0..1]
        datatype: xsd:string
    - p: obo:NCIT_C12801
      o:
        mapping: OntologyClass [0..1],TISSUE
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C70713
      o:
        mapping: OntologyClass [0..1],SAMPLE_TYPE
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: phenop:phenotypic_feature
      o:
        mapping: PhenotypicFeature [0..*],PHENOTYPIC_FEATURE
        condition:
          function: equal
          parameters:
          - '[str1, $(PhenotypicFeature SUBJECT ID), s]'
          - '[str2, $(PhenotypicFeature OBJECT ID), o]'
    - p: obo:NCIT_C25209
      o:
        mapping: Measurement [0..*],MEASUREMENT
        condition:
          function: equal
          parameters:
          - '[str1, $(Measurement SUBJECT ID), s]'
          - '[str2, $(Measurement OBJECT ID), o]'
    - p: obo:NCIT_C17469
      o:
        mapping: OntologyClass [0..1],TAXONOMY
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C81287
      o:
        mapping: TimeElement [0..1],TIME_OF_COLLECTION
        condition:
          function: equal
          parameters:
          - '[str1, $(TimeElement SUBJECT ID), s]'
          - '[str2, $(TimeElement OBJECT ID), o]'
    - p: phenop:histological_diagnosis
      o:
        mapping: OntologyClass [0..1],HISTOLOGICAL_DIAGNOSIS
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C17609
      o:
        mapping: OntologyClass [0..1],TUMOR_PROGRESSION
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C18000
      o:
        mapping: OntologyClass [0..1],TUMOR_GRADE
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: phenop:pathological_stage
      o:
        mapping: OntologyClass [0..1],PATHOLOGICAL_STAGE
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: phenop:pathological_tnm_finding
      o:
        mapping: OntologyClass [0..*],PATHOLOGICAL_TNM_FINDING
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C19591
      o:
        mapping: OntologyClass [0..*],DIAGNOSTIC_MARKER
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C79751
      o:
        mapping: Procedure [0..1],PROCEDURE
        condition:
          function: equal
          parameters:
          - '[str1, $(Procedure SUBJECT ID), s]'
          - '[str2, $(Procedure OBJECT ID), o]'
    - p: obo:NCIT_C42883
      o:
        mapping: File [0..*],FILE
        condition:
          function: equal
          parameters:
          - '[str1, $(File SUBJECT ID), s]'
          - '[str2, $(File OBJECT ID), o]'
    - p: phenop:material_sample
      o:
        mapping: OntologyClass [0..1],MATERIAL_SAMPLE
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: phenop:sample_processing
      o:
        mapping: OntologyClass [0..1],SAMPLE_PROCESSING
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: phenop:sample_storage
      o:
        mapping: OntologyClass [0..1],SAMPLE_STORAGE
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
  CURIEIdentifier:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :curieidentifier_$(IDENTIFIER)
    po:
    - p: sio:SIO_000300
      o:
        value: $(HAS_VALUE)[1..1]
        datatype: xsd:string
  Disease:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :disease_$(IDENTIFIER)
    po:
    - p: obo:NCIT_C45559
      o:
        mapping: OntologyClass [1..1],TERM
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C82931
      o:
        value: $(EXCLUDED)[0..1]
        datatype: xsd:boolean
    - p: obo:HP_0003674
      o:
        mapping: TimeElement [0..1],ONSET
        condition:
          function: equal
          parameters:
          - '[str1, $(TimeElement SUBJECT ID), s]'
          - '[str2, $(TimeElement OBJECT ID), o]'
    - p: obo:NCIT_C25655
      o:
        mapping: TimeElement [0..1],RESOLUTION
        condition:
          function: equal
          parameters:
          - '[str1, $(TimeElement SUBJECT ID), s]'
          - '[str2, $(TimeElement OBJECT ID), o]'
    - p: obo:NCIT_C28108
      o:
        mapping: OntologyClass [0..*],DISEASE_STAGE
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: phenop:clinical_tnm_finding
      o:
        mapping: OntologyClass [0..*],CLINICAL_TNM_FINDING
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C158874
      o:
        mapping: OntologyClass [0..1],PRIMARY_SITE
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C25185
      o:
        mapping: OntologyClass [0..1],LATERALITY
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
  DoseInterval:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :doseinterval_$(IDENTIFIER)
    po:
    - p: sio:SIO_000052
      o:
        mapping: Quantity [1..1],QUANTITY
        condition:
          function: equal
          parameters:
          - '[str1, $(Quantity SUBJECT ID), s]'
          - '[str2, $(Quantity OBJECT ID), o]'
    - p: obo:NCIT_C64493
      o:
        mapping: OntologyClass [1..1],SCHEDULE_FREQUENCY
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C25543
      o:
        mapping: TimeInterval [1..1],INTERVAL
        condition:
          function: equal
          parameters:
          - '[str1, $(TimeInterval SUBJECT ID), s]'
          - '[str2, $(TimeInterval OBJECT ID), o]'
  DrugType:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :drugtype_$(IDENTIFIER)
    po:
    - p: sio:SIO_000300
      o:
        value: $(HAS_VALUE)[1..1]
        datatype: xsd:string
  Evidence:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :evidence_$(IDENTIFIER)
    po:
    - p: obo:ECO_0000000
      o:
        datatype: xsd:string
        mapping: OntologyClass [1..1],EVIDENCE_CODE
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: dcterms:isReferencedBy
      o:
        mapping: ExternalReference [0..1],REFERENCE
        condition:
          function: equal
          parameters:
          - '[str1, $(ExternalReference SUBJECT ID), s]'
          - '[str2, $(ExternalReference OBJECT ID), o]'
  Extension:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :extension_$(IDENTIFIER)
    po:
    - p: sio:SIO_000116
      o:
        value: $(NAME)[1..1]
        datatype: xsd:string
    - p: sio:SIO_000300
      o:
        value: $(HAS_VALUE)[1..1]
        datatype: xsd:string
  ExternalReference:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :externalreference_$(IDENTIFIER)
    po:
    - p: dcterms:identifier
      o:
        value: $(IDENTIFIER)[0..1]
        datatype: xsd:string
    - p: sio:SIO_000176
      o:
        value: $(REFERENCE)[0..1]
        datatype: xsd:string
    - p: dcterms:description
      o:
        value: $(DESCRIPTION)[0..1]
        datatype: xsd:string
  File:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :file_$(IDENTIFIER)
    po:
    - p: dcterms:source
      o:
        value: $(URI_SOURCE)[1..1]
        datatype: xsd:string
  Individual:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :individual_$(IDENTIFIER)
    po:
    - p: dcterms:identifier
      o:
        value: $(IDENTIFIER)[1..1]
        datatype: xsd:string
    - p: obo:NCIT_C90353
      o:
        mapping: CURIEIdentifier [0..*],ALTERNATE_IDENTIFIER
        condition:
          function: equal
          parameters:
          - '[str1, $(CURIEIdentifier SUBJECT ID), s]'
          - '[str2, $(CURIEIdentifier OBJECT ID), o]'
    - p: obo:NCIT_C94173
      o:
        mapping: Timestamp [0..1],DATE_OF_BIRTH
        condition:
          function: equal
          parameters:
          - '[str1, $(Timestamp SUBJECT ID), s]'
          - '[str2, $(Timestamp OBJECT ID), o]'
    - p: phenop:time_at_last_encounter
      o:
        mapping: TimeElement [0..1],TIME_AT_LAST_ENCOUNTER
        condition:
          function: equal
          parameters:
          - '[str1, $(TimeElement SUBJECT ID), s]'
          - '[str2, $(TimeElement OBJECT ID), o]'
    - p: obo:NCIT_C25717
      o:
        mapping: VitalStatus [0..1],VITAL_STATUS
        condition:
          function: equal
          parameters:
          - '[str1, $(VitalStatus SUBJECT ID), s]'
          - '[str2, $(VitalStatus OBJECT ID), o]'
    - p: obo:NCIT_C28421
      o:
        mapping: Sex [0..1],SEX
        condition:
          function: equal
          parameters:
          - '[str1, $(Sex SUBJECT ID), s]'
          - '[str2, $(Sex OBJECT ID), o]'
    - p: obo:GSSO_000113
      o:
        mapping: KaryotypicSex [0..1],KARYOTYPIC_SEX
        condition:
          function: equal
          parameters:
          - '[str1, $(KaryotypicSex SUBJECT ID), s]'
          - '[str2, $(KaryotypicSex OBJECT ID), o]'
    - p: obo:NCIT_C17357
      o:
        mapping: OntologyClass [0..1],GENDER
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C17469
      o:
        mapping: OntologyClass [0..1],TAXONOMY
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
  KaryotypicSex:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :karyotypicsex_$(IDENTIFIER)
    po:
    - p: sio:SIO_000300
      o:
        value: $(HAS_VALUE)[1..1]
        datatype: xsd:string
  Sex:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :sex_$(IDENTIFIER)
    po:
    - p: sio:SIO_000300
      o:
        value: $(HAS_VALUE)[1..1]
        datatype: xsd:string
  Status:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :status_$(IDENTIFIER)
    po:
    - p: sio:SIO_000300
      o:
        value: $(HAS_VALUE)[1..1]
        datatype: xsd:string
  VitalStatus:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :vitalstatus_$(IDENTIFIER)
    po:
    - p: sio:SIO_001326
      o:
        mapping: Status [1..1],STATUS_DESCRIPTOR
        condition:
          function: equal
          parameters:
          - '[str1, $(Status SUBJECT ID), s]'
          - '[str2, $(Status OBJECT ID), o]'
    - p: phenop:time_of_death
      o:
        mapping: TimeElement [0..1],TIME_OF_DEATH
        condition:
          function: equal
          parameters:
          - '[str1, $(TimeElement SUBJECT ID), s]'
          - '[str2, $(TimeElement OBJECT ID), o]'
    - p: phenop:cause_of_death
      o:
        mapping: OntologyClass [0..1],CAUSE_OF_DEATH
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: phenop:survival_time_in_days
      o:
        value: $(SURVIVAL_TIME_IN_DAYS)[0..1]
        datatype: xsd:integer
  Interpretation:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :interpretation_$(IDENTIFIER)
    po:
    - p: dcterms:identifier
      o:
        value: $(IDENTIFIER)[1..1]
        datatype: xsd:string
    - p: phenop:progress_status
      o:
        mapping: ProgressStatus [1..1],PROGRESS_STATUS
        condition:
          function: equal
          parameters:
          - '[str1, $(ProgressStatus SUBJECT ID), s]'
          - '[str2, $(ProgressStatus OBJECT ID), o]'
    - p: obo:NCIT_C15220
      o:
        mapping: Diagnosis [0..1],DIAGNOSIS
        condition:
          function: equal
          parameters:
          - '[str1, $(Diagnosis SUBJECT ID), s]'
          - '[str2, $(Diagnosis OBJECT ID), o]'
    - p: obo:NCIT_C42581
      o:
        value: $(SUMMARY)[0..1]
        datatype: xsd:string
  AcmgPathogenicityClassification:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :acmgpathogenicityclassification_$(IDENTIFIER)
    po:
    - p: sio:SIO_000300
      o:
        value: $(HAS_VALUE)[1..1]
        datatype: xsd:string
  Diagnosis:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :diagnosis_$(IDENTIFIER)
    po:
    - p: obo:MONDO_0000001
      o:
        mapping: OntologyClass [1..1],DISEASE
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: phenop:genomic_interpretation
      o:
        mapping: GenomicInterpretation [0..*],GENOMIC_INTERPRETATION
        condition:
          function: equal
          parameters:
          - '[str1, $(GenomicInterpretation SUBJECT ID), s]'
          - '[str2, $(GenomicInterpretation OBJECT ID), o]'
  Expression:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :expression_$(IDENTIFIER)
    po:
    - p: obo:NCIT_C54277
      o:
        value: $(SYNTAX)[1..1]
        datatype: xsd:string
    - p: sio:SIO_000300
      o:
        value: $(HAS_VALUE)[1..1]
        datatype: xsd:string
    - p: dcterms:hasVersion
      o:
        value: $(VERSION)[0..1]
        datatype: xsd:string
  GeneDescriptor:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :genedescriptor_$(IDENTIFIER)
    po:
    - p: dcterms:identifier
      o:
        value: $(IDENTIFIER)[1..1]
        datatype: xsd:string
    - p: obo:NCIT_C54191
      o:
        value: $(SYMBOL)[1..1]
    - p: dcterms:description
      o:
        value: $(DESCRIPTION)[0..1]
        datatype: xsd:string
    - p: obo:NCIT_C90353
      o:
        value: $(ALTERNATE_IDENTIFIER)[0..*]
        datatype: xsd:string
    - p: obo:NCIT_C43621
      o:
        value: $(XREFS)[0..*]
        datatype: xsd:string
    - p: phenop:alternate_symbol
      o:
        value: $(ALTERNATE_SYMBOL)[0..*]
        datatype: xsd:string
  GenomicInterpretation:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :genomicinterpretation_$(IDENTIFIER)
    po:
    - p: dcterms:identifier
      o:
        value: $(IDENTIFIER)[1..1]
        datatype: xsd:string
    - p: obo:NCIT_C25688
      o:
        mapping: InterpretationStatus [1..1],STATUS
        condition:
          function: equal
          parameters:
          - '[str1, $(InterpretationStatus SUBJECT ID), s]'
          - '[str2, $(InterpretationStatus OBJECT ID), o]'
    - p: phenop:call
      o:
        mapping: MULTIPLE OPTIONS FOR MAPPED CLASS [1..1],CALL
        condition:
          function: equal
          parameters:
          - '[str1, $(MULTIPLE OPTIONS FOR MAPPED CLASS SUBJECT ID), s]'
          - '[str2, $(MULTIPLE OPTIONS FOR MAPPED CLASS OBJECT ID), o]'
  InterpretationStatus:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :interpretationstatus_$(IDENTIFIER)
    po:
    - p: sio:SIO_000300
      o:
        value: $(HAS_VALUE)[1..1]
        datatype: xsd:string
  MoleculeContext:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :moleculecontext_$(IDENTIFIER)
    po:
    - p: sio:SIO_000300
      o:
        value: $(HAS_VALUE)[1..1]
        datatype: xsd:string
  ProgressStatus:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :progressstatus_$(IDENTIFIER)
    po:
    - p: sio:SIO_000300
      o:
        value: $(HAS_VALUE)[1..1]
        datatype: xsd:string
  TherapeuticActionability:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :therapeuticactionability_$(IDENTIFIER)
    po:
    - p: sio:SIO_000300
      o:
        value: $(HAS_VALUE)[1..1]
        datatype: xsd:string
  VariationDescriptor:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :variationdescriptor_$(IDENTIFIER)
    po:
    - p: dcterms:identifier
      o:
        value: $(IDENTIFIER)[1..1]
        datatype: xsd:string
    - p: obo:NCIT_C25713
      o:
        mapping: Variation [0..1],VARIATION
        condition:
          function: equal
          parameters:
          - '[str1, $(Variation SUBJECT ID), s]'
          - '[str2, $(Variation OBJECT ID), o]'
    - p: sio:SIO_000179
      o:
        value: $(LABEL)[0..1]
        datatype: xsd:string
    - p: dcterms:description
      o:
        value: $(DESCRIPTION)[0..1]
        datatype: xsd:string
    - p: phenop:gene_context
      o:
        mapping: GeneDescriptor [0..1],GENE_CONTEXT
        condition:
          function: equal
          parameters:
          - '[str1, $(GeneDescriptor SUBJECT ID), s]'
          - '[str2, $(GeneDescriptor OBJECT ID), o]'
    - p: obo:NCIT_C80488
      o:
        mapping: Expression [0..*],EXPRESSION
        condition:
          function: equal
          parameters:
          - '[str1, $(Expression SUBJECT ID), s]'
          - '[str2, $(Expression OBJECT ID), o]'
    - p: phenop:vcf_record
      o:
        mapping: VcfRecord [0..1],VCF_RECORD
        condition:
          function: equal
          parameters:
          - '[str1, $(VcfRecord SUBJECT ID), s]'
          - '[str2, $(VcfRecord OBJECT ID), o]'
    - p: obo:NCIT_C43621
      o:
        value: $(XREFS)[0..*]
        datatype: xsd:string
    - p: phenop:alternate_labels
      o:
        value: $(ALTERNATE_LABELS)[0..*]
        datatype: xsd:string
    - p: phenop:extension
      o:
        mapping: Extension [0..*],EXTENSION
        condition:
          function: equal
          parameters:
          - '[str1, $(Extension SUBJECT ID), s]'
          - '[str2, $(Extension OBJECT ID), o]'
    - p: phenop:molecule_context
      o:
        mapping: MoleculeContext [1..1],MOLECULE_CONTEXT
        condition:
          function: equal
          parameters:
          - '[str1, $(MoleculeContext SUBJECT ID), s]'
          - '[str2, $(MoleculeContext OBJECT ID), o]'
    - p: phenop:structural_type
      o:
        mapping: OntologyClass [0..1],STRUCTURAL_TYPE
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: phenop:vrs_ref_allele_seq
      o:
        value: $(VRS_REF_ALLELE_SEQ)[0..1]
        datatype: xsd:string
    - p: obo:GENO_0000133
      o:
        mapping: OntologyClass [0..1],ALLELIC_STATE
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
  VariantInterpretation:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :variantinterpretation_$(IDENTIFIER)
    po:
    - p: obo:NCIT_C168798
      o:
        mapping: AcmgPathogenicityClassification [1..1],ACMG_PATHOGENICITY_CLASSIFICATION
        condition:
          function: equal
          parameters:
          - '[str1, $(AcmgPathogenicityClassification SUBJECT ID), s]'
          - '[str2, $(AcmgPathogenicityClassification OBJECT ID), o]'
    - p: phenop:therapeutic_actionability
      o:
        mapping: TherapeuticActionability [1..1],THERAPEUTIC_ACTIONABILITY
        condition:
          function: equal
          parameters:
          - '[str1, $(TherapeuticActionability SUBJECT ID), s]'
          - '[str2, $(TherapeuticActionability OBJECT ID), o]'
    - p: phenop:variation_descriptor
      o:
        mapping: VariationDescriptor [1..1],VARIATION_DESCRIPTOR
        condition:
          function: equal
          parameters:
          - '[str1, $(VariationDescriptor SUBJECT ID), s]'
          - '[str2, $(VariationDescriptor OBJECT ID), o]'
  VcfRecord:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :vcfrecord_$(IDENTIFIER)
    po:
    - p: phenop:genome_assembly
      o:
        value: $(GENOME_ASSEMBLY)[1..1]
        datatype: xsd:string
    - p: phenop:chrom
      o:
        value: $(CHROM)[1..1]
        datatype: xsd:string
    - p: phenop:pos
      o:
        value: $(POS)[1..1]
        datatype: xsd:integer
    - p: dcterms:identifier
      o:
        value: $(IDENTIFIER)[0..1]
        datatype: xsd:string
    - p: phenop:ref
      o:
        value: $(REF)[1..1]
        datatype: xsd:string
    - p: phenop:alt
      o:
        value: $(ALT)[1..1]
        datatype: xsd:string
    - p: phenop:qual
      o:
        value: $(QUAL)[0..1]
        datatype: xsd:string
    - p: phenop:filter
      o:
        value: $(FILTER)[0..1]
        datatype: xsd:string
    - p: obo:NCIT_C48191
      o:
        value: $(INFO)[0..1]
        datatype: xsd:string
  Measurement:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :measurement_$(IDENTIFIER)
    po:
    - p: dcterms:description
      o:
        value: $(DESCRIPTION)[0..1]
        datatype: xsd:string
    - p: sio:SIO_001007
      o:
        mapping: OntologyClass [1..1],ASSAY
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: sio:SIO_000070
      o:
        value: $(MEASUREMENT_VALUE)[1..1]
    - p: phenop:time_observed
      o:
        mapping: TimeElement [0..1],TIME_OBSERVED
        condition:
          function: equal
          parameters:
          - '[str1, $(TimeElement SUBJECT ID), s]'
          - '[str2, $(TimeElement OBJECT ID), o]'
    - p: obo:NCIT_C79751
      o:
        mapping: Procedure [0..1],PROCEDURE
        condition:
          function: equal
          parameters:
          - '[str1, $(Procedure SUBJECT ID), s]'
          - '[str2, $(Procedure OBJECT ID), o]'
  ComplexValue:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :complexvalue_$(IDENTIFIER)
    po:
    - p: phenop:typed_quantities
      o:
        mapping: TypedQuantity [1..*],TYPED_QUANTITIES
        condition:
          function: equal
          parameters:
          - '[str1, $(TypedQuantity SUBJECT ID), s]'
          - '[str2, $(TypedQuantity OBJECT ID), o]'
  Value:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :value_$(IDENTIFIER)
    po:
    - p: sio:SIO_000300
      o:
        mapping: MULTIPLE OPTIONS FOR MAPPED CLASS [1..1],HAS_VALUE
        condition:
          function: equal
          parameters:
          - '[str1, $(MULTIPLE OPTIONS FOR MAPPED CLASS SUBJECT ID), s]'
          - '[str2, $(MULTIPLE OPTIONS FOR MAPPED CLASS OBJECT ID), o]'
  MedicalAction:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :medicalaction_$(IDENTIFIER)
    po:
    - p: sio:SIO_000091
      o:
        mapping: MULTIPLE OPTIONS FOR MAPPED CLASS [1..1],ACTION_SPECIFICATION
        condition:
          function: equal
          parameters:
          - '[str1, $(MULTIPLE OPTIONS FOR MAPPED CLASS SUBJECT ID), s]'
          - '[str2, $(MULTIPLE OPTIONS FOR MAPPED CLASS OBJECT ID), o]'
    - p: obo:NCIT_C25702
      o:
        mapping: OntologyClass [0..1],TREATMENT_TARGET
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C25725
      o:
        mapping: OntologyClass [0..1],TREATMENT_INTENT
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C25755
      o:
        mapping: OntologyClass [0..1],RESPONSE_TO_TREATMENT
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C41331
      o:
        mapping: OntologyClass [0..*],ADVERSE_EVENT
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: phenop:treatment_termination_reason
      o:
        mapping: OntologyClass [0..1],TREATMENT_TERMINATION_REASON
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
  MetaData:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :metadata_$(IDENTIFIER)
    po:
    - p: dcterms:created
      o:
        value: $(CREATED)[1..1]
        datatype: xsd:dateTime
    - p: dcterms:creator
      o:
        value: $(CREATED_BY)[1..1]
        datatype: xsd:string
    - p: obo:NCIT_C54269
      o:
        value: $(SUBMITTED_BY)[0..1]
        datatype: xsd:string
    - p: phenop:resource
      o:
        mapping: Resource [1..*],RESOURCE
        condition:
          function: equal
          parameters:
          - '[str1, $(Resource SUBJECT ID), s]'
          - '[str2, $(Resource OBJECT ID), o]'
    - p: obo:NCIT_C25710
      o:
        mapping: Update [0..*],UPDATE
        condition:
          function: equal
          parameters:
          - '[str1, $(Update SUBJECT ID), s]'
          - '[str2, $(Update OBJECT ID), o]'
    - p: phenop:phenopacket_schema_version
      o:
        value: $(PHENOPACKET_SCHEMA_VERSION)[1..1]
        datatype: xsd:string
    - p: phenop:external_reference
      o:
        mapping: ExternalReference [0..*],EXTERNAL_REFERENCE
        condition:
          function: equal
          parameters:
          - '[str1, $(ExternalReference SUBJECT ID), s]'
          - '[str2, $(ExternalReference OBJECT ID), o]'
  OntologyClass:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :ontologyclass_$(IDENTIFIER)
    po:
    - p: dcterms:identifier
      o:
        mapping: CURIEIdentifier [1..1],CURIE_IDENTIFIER
        condition:
          function: equal
          parameters:
          - '[str1, $(CURIEIdentifier SUBJECT ID), s]'
          - '[str2, $(CURIEIdentifier OBJECT ID), o]'
    - p: sio:SIO_000179
      o:
        value: $(LABEL)[1..1]
        datatype: xsd:string
  Phenopacket:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :phenopacket_$(IDENTIFIER)
    po:
    - p: dcterms:identifier
      o:
        value: $(IDENTIFIER)[1..1]
        datatype: xsd:string
    - p: dcterms:subject
      o:
        mapping: Individual [0..1],SUBJECT
        condition:
          function: equal
          parameters:
          - '[str1, $(Individual SUBJECT ID), s]'
          - '[str2, $(Individual OBJECT ID), o]'
    - p: phenop:phenotypic_feature
      o:
        mapping: PhenotypicFeature [0..*],PHENOTYPIC_FEATURE
        condition:
          function: equal
          parameters:
          - '[str1, $(PhenotypicFeature SUBJECT ID), s]'
          - '[str2, $(PhenotypicFeature OBJECT ID), o]'
    - p: obo:NCIT_C25209
      o:
        mapping: Measurement [0..*],MEASUREMENT
        condition:
          function: equal
          parameters:
          - '[str1, $(Measurement SUBJECT ID), s]'
          - '[str2, $(Measurement OBJECT ID), o]'
    - p: obo:NCIT_C43412
      o:
        mapping: Biosample [0..*],BIOSAMPLE
        condition:
          function: equal
          parameters:
          - '[str1, $(Biosample SUBJECT ID), s]'
          - '[str2, $(Biosample OBJECT ID), o]'
    - p: obo:NCIT_C41255
      o:
        mapping: Interpretation [0..*],INTERPRETATION
        condition:
          function: equal
          parameters:
          - '[str1, $(Interpretation SUBJECT ID), s]'
          - '[str2, $(Interpretation OBJECT ID), o]'
    - p: obo:NCIT_C2991
      o:
        mapping: Disease [0..*],DISEASE
        condition:
          function: equal
          parameters:
          - '[str1, $(Disease SUBJECT ID), s]'
          - '[str2, $(Disease OBJECT ID), o]'
    - p: obo:MAXO_0000001
      o:
        mapping: MedicalAction [0..*],MEDICAL_ACTION
        condition:
          function: equal
          parameters:
          - '[str1, $(MedicalAction SUBJECT ID), s]'
          - '[str2, $(MedicalAction OBJECT ID), o]'
    - p: obo:NCIT_C42883
      o:
        mapping: File [0..*],FILE
        condition:
          function: equal
          parameters:
          - '[str1, $(File SUBJECT ID), s]'
          - '[str2, $(File OBJECT ID), o]'
    - p: obo:NCIT_C52095
      o:
        mapping: MetaData [1..1],METADATA
        condition:
          function: equal
          parameters:
          - '[str1, $(MetaData SUBJECT ID), s]'
          - '[str2, $(MetaData OBJECT ID), o]'
  PhenotypicFeature:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :phenotypicfeature_$(IDENTIFIER)
    po:
    - p: dcterms:description
      o:
        value: $(DESCRIPTION)[0..1]
        datatype: xsd:string
    - p: obo:NCIT_C25284
      o:
        mapping: OntologyClass [1..1],TYPE
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C82931
      o:
        value: $(EXCLUDED)[0..1]
        datatype: xsd:boolean
    - p: obo:NCIT_C25676
      o:
        mapping: OntologyClass [0..1],SEVERITY
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:MONDO_0021125
      o:
        mapping: OntologyClass [0..*],MODIFIER
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:HP_0003674
      o:
        mapping: TimeElement [0..1],ONSET
        condition:
          function: equal
          parameters:
          - '[str1, $(TimeElement SUBJECT ID), s]'
          - '[str2, $(TimeElement OBJECT ID), o]'
    - p: obo:NCIT_C25655
      o:
        mapping: TimeElement [0..1],RESOLUTION
        condition:
          function: equal
          parameters:
          - '[str1, $(TimeElement SUBJECT ID), s]'
          - '[str2, $(TimeElement OBJECT ID), o]'
    - p: obo:ECO_0000000
      o:
        mapping: Evidence [0..*],EVIDENCE
        condition:
          function: equal
          parameters:
          - '[str1, $(Evidence SUBJECT ID), s]'
          - '[str2, $(Evidence OBJECT ID), o]'
  Procedure:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :procedure_$(IDENTIFIER)
    po:
    - p: phenop:procedure_code
      o:
        mapping: OntologyClass [1..1],PROCEDURE_CODE
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C13717
      o:
        mapping: OntologyClass [0..1],BODY_SITE
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: phenop:time_performed
      o:
        mapping: TimeElement [0..1],TIME_PERFORMED
        condition:
          function: equal
          parameters:
          - '[str1, $(TimeElement SUBJECT ID), s]'
          - '[str2, $(TimeElement OBJECT ID), o]'
  Quantity:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :quantity_$(IDENTIFIER)
    po:
    - p: sio:SIO_000074
      o:
        mapping: OntologyClass [1..1],UNIT
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: sio:SIO_000300
      o:
        value: $(HAS_VALUE)[1..1]
        datatype: xsd:double
    - p: phenop:reference_range
      o:
        mapping: ReferenceRange [0..1],REFERENCE_RANGE
        condition:
          function: equal
          parameters:
          - '[str1, $(ReferenceRange SUBJECT ID), s]'
          - '[str2, $(ReferenceRange OBJECT ID), o]'
  TypedQuantity:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :typedquantity_$(IDENTIFIER)
    po:
    - p: obo:NCIT_C25284
      o:
        mapping: OntologyClass [1..1],TYPE
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: sio:SIO_000052
      o:
        mapping: Quantity [1..1],QUANTITY
        condition:
          function: equal
          parameters:
          - '[str1, $(Quantity SUBJECT ID), s]'
          - '[str2, $(Quantity OBJECT ID), o]'
  RadiationTherapy:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :radiationtherapy_$(IDENTIFIER)
    po:
    - p: obo:NCIT_C41147
      o:
        mapping: OntologyClass [1..1],MODALITY
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C13717
      o:
        mapping: OntologyClass [1..1],BODY_SITE
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C25488
      o:
        value: $(DOSAGE)[1..1]
        datatype: xsd:integer
    - p: obo:NCIT_C15654
      o:
        value: $(FRACTIONS)[1..1]
        datatype: xsd:integer
  ReferenceRange:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :referencerange_$(IDENTIFIER)
    po:
    - p: sio:SIO_000074
      o:
        mapping: OntologyClass [1..1],UNIT
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: phenop:low
      o:
        value: $(LOW)[1..1]
        datatype: xsd:double
    - p: phenop:high
      o:
        value: $(HIGH)[1..1]
        datatype: xsd:double
  Resource:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :resource_$(IDENTIFIER)
    po:
    - p: dcterms:identifier
      o:
        value: $(IDENTIFIER)[1..1]
        datatype: xsd:string
    - p: sio:SIO_000116
      o:
        value: $(NAME)[1..1]
        datatype: xsd:string
    - p: phenop:namespace_prefix
      o:
        value: $(NAMESPACE_PREFIX)[1..1]
        datatype: xsd:string
    - p: sio:SIO_000811
      o:
        value: $(URL)[1..1]
        datatype: xsd:string
    - p: dcterms:hasVersion
      o:
        value: $(VERSION)[1..1]
        datatype: xsd:string
    - p: phenop:iri_prefix
      o:
        value: $(IRI_PREFIX)[1..1]
        datatype: xsd:string
  TherapeuticRegimen:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :therapeuticregimen_$(IDENTIFIER)
    po:
    - p: dcterms:identifier
      o:
        mapping: MULTIPLE OPTIONS FOR MAPPED CLASS [1..1],IDENTIFIER
        condition:
          function: equal
          parameters:
          - '[str1, $(MULTIPLE OPTIONS FOR MAPPED CLASS SUBJECT ID), s]'
          - '[str2, $(MULTIPLE OPTIONS FOR MAPPED CLASS OBJECT ID), o]'
    - p: sio:SIO_000669
      o:
        mapping: Timestamp [0..1],START_TIME
        condition:
          function: equal
          parameters:
          - '[str1, $(Timestamp SUBJECT ID), s]'
          - '[str2, $(Timestamp OBJECT ID), o]'
    - p: sio:SIO_000670
      o:
        mapping: Timestamp [0..1],END_TIME
        condition:
          function: equal
          parameters:
          - '[str1, $(Timestamp SUBJECT ID), s]'
          - '[str2, $(Timestamp OBJECT ID), o]'
    - p: obo:NCIT_C25688
      o:
        mapping: RegimenStatus [1..1],STATUS
        condition:
          function: equal
          parameters:
          - '[str1, $(RegimenStatus SUBJECT ID), s]'
          - '[str2, $(RegimenStatus OBJECT ID), o]'
  RegimenStatus:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :regimenstatus_$(IDENTIFIER)
    po:
    - p: sio:SIO_000300
      o:
        value: $(HAS_VALUE)[1..1]
        datatype: xsd:string
  GestationalAge:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :gestationalage_$(IDENTIFIER)
    po:
    - p: sio:SIO_001354
      o:
        value: $(WEEKS)[1..1]
        datatype: xsd:integer
    - p: sio:SIO_000430
      o:
        value: $(DAYS)[0..1]
        datatype: xsd:integer
  Age:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :age_$(IDENTIFIER)
    po:
    - p: phenop:iso8601duration
      o:
        value: $(ISO8601DURATION)[1..1]
        datatype: xsd:string
  AgeRange:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :agerange_$(IDENTIFIER)
    po:
    - p: sio:SIO_000509
      o:
        mapping: Age [1..1],START_POINT
        condition:
          function: equal
          parameters:
          - '[str1, $(Age SUBJECT ID), s]'
          - '[str2, $(Age OBJECT ID), o]'
    - p: sio:SIO_000508
      o:
        mapping: Age [1..1],END_POINT
        condition:
          function: equal
          parameters:
          - '[str1, $(Age SUBJECT ID), s]'
          - '[str2, $(Age OBJECT ID), o]'
  Timestamp:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :timestamp_$(IDENTIFIER)
    po:
    - p: phenop:iso8601datetime
      o:
        value: $(ISO8601DATETIME)[1..1]
        datatype: xsd:string
  TimeInterval:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :timeinterval_$(IDENTIFIER)
    po:
    - p: sio:SIO_000669
      o:
        mapping: Timestamp [1..1],START_TIME
        condition:
          function: equal
          parameters:
          - '[str1, $(Timestamp SUBJECT ID), s]'
          - '[str2, $(Timestamp OBJECT ID), o]'
    - p: sio:SIO_000670
      o:
        mapping: Timestamp [1..1],END_TIME
        condition:
          function: equal
          parameters:
          - '[str1, $(Timestamp SUBJECT ID), s]'
          - '[str2, $(Timestamp OBJECT ID), o]'
  TimeElement:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :timeelement_$(IDENTIFIER)
    po: MULTIPLE OPTIONS FOR SETS OF PROPERTIES
  Treatment:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :treatment_$(IDENTIFIER)
    po:
    - p: obo:NCIT_C1909
      o:
        mapping: OntologyClass [1..1],AGENT
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: obo:NCIT_C38114
      o:
        mapping: OntologyClass [0..1],ROUTE_OF_ADMINISTRATION
        condition:
          function: equal
          parameters:
          - '[str1, $(OntologyClass SUBJECT ID), s]'
          - '[str2, $(OntologyClass OBJECT ID), o]'
    - p: phenop:dose_intervals
      o:
        mapping: DoseInterval [0..*],DOSE_INTERVALS
        condition:
          function: equal
          parameters:
          - '[str1, $(DoseInterval SUBJECT ID), s]'
          - '[str2, $(DoseInterval OBJECT ID), o]'
    - p: phenop:drug_type
      o:
        mapping: DrugType [0..1],DRUG_TYPE
        condition:
          function: equal
          parameters:
          - '[str1, $(DrugType SUBJECT ID), s]'
          - '[str2, $(DrugType OBJECT ID), o]'
    - p: obo:NCIT_C94394
      o:
        mapping: Quantity [0..1],CUMULATIVE_DOSE
        condition:
          function: equal
          parameters:
          - '[str1, $(Quantity SUBJECT ID), s]'
          - '[str2, $(Quantity OBJECT ID), o]'
  Update:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :update_$(IDENTIFIER)
    po:
    - p: obo:NCIT_C72669
      o:
        mapping: Timestamp [1..1],TIMESTAMP
        condition:
          function: equal
          parameters:
          - '[str1, $(Timestamp SUBJECT ID), s]'
          - '[str2, $(Timestamp OBJECT ID), o]'
    - p: dcterms:contributor
      o:
        value: $(CONTRIBUTOR)[0..1]
        datatype: xsd:string
    - p: obo:NCIT_C25393
      o:
        value: $(COMMENT)[0..1]
        datatype: xsd:string
  Variation:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :variation_$(IDENTIFIER)
    po:
    - p: dcterms:identifier
      o:
        mapping: CURIEIdentifier [0..1],IDENTIFIER
        condition:
          function: equal
          parameters:
          - '[str1, $(CURIEIdentifier SUBJECT ID), s]'
          - '[str2, $(CURIEIdentifier OBJECT ID), o]'
    - p: obo:NCIT_C25284
      o:
        mapping: MULTIPLE OPTIONS FOR MAPPED CLASS [1..1],TYPE
        condition:
          function: equal
          parameters:
          - '[str1, $(MULTIPLE OPTIONS FOR MAPPED CLASS SUBJECT ID), s]'
          - '[str2, $(MULTIPLE OPTIONS FOR MAPPED CLASS OBJECT ID), o]'
  Allele:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :allele_$(IDENTIFIER)
    po:
    - p: dcterms:identifier
      o:
        mapping: CURIEIdentifier [0..1],IDENTIFIER
        condition:
          function: equal
          parameters:
          - '[str1, $(CURIEIdentifier SUBJECT ID), s]'
          - '[str2, $(CURIEIdentifier OBJECT ID), o]'
    - p: obo:NCIT_C25341
      o:
        mapping: MULTIPLE OPTIONS FOR MAPPED CLASS [1..1],LOCATION
        condition:
          function: equal
          parameters:
          - '[str1, $(MULTIPLE OPTIONS FOR MAPPED CLASS SUBJECT ID), s]'
          - '[str2, $(MULTIPLE OPTIONS FOR MAPPED CLASS OBJECT ID), o]'
    - p: obo:NCIT_C25687
      o:
        mapping: MULTIPLE OPTIONS FOR MAPPED CLASS [1..1],STATE
        condition:
          function: equal
          parameters:
          - '[str1, $(MULTIPLE OPTIONS FOR MAPPED CLASS SUBJECT ID), s]'
          - '[str2, $(MULTIPLE OPTIONS FOR MAPPED CLASS OBJECT ID), o]'
  HumanCytoband:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :humancytoband_$(IDENTIFIER)
    po:
    - p: sio:SIO_000300
      o:
        value: $(HAS_VALUE)[1..1]
        datatype: xsd:string
  CytobandInterval:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :cytobandinterval_$(IDENTIFIER)
    po:
    - p: sio:SIO_000509
      o:
        mapping: HumanCytobandShape [1..1],START_POINT
        condition:
          function: equal
          parameters:
          - '[str1, $(HumanCytobandShape SUBJECT ID), s]'
          - '[str2, $(HumanCytobandShape OBJECT ID), o]'
    - p: sio:SIO_000508
      o:
        mapping: HumanCytobandShape [1..1],END_POINT
        condition:
          function: equal
          parameters:
          - '[str1, $(HumanCytobandShape SUBJECT ID), s]'
          - '[str2, $(HumanCytobandShape OBJECT ID), o]'
  SequenceLocation:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :sequencelocation_$(IDENTIFIER)
    po:
    - p: dcterms:identifier
      o:
        mapping: CURIEIdentifier [0..1],IDENTIFIER
        condition:
          function: equal
          parameters:
          - '[str1, $(CURIEIdentifier SUBJECT ID), s]'
          - '[str2, $(CURIEIdentifier OBJECT ID), o]'
    - p: obo:GENO_0000017
      o:
        mapping: CURIEIdentifier [1..1],REFERENCE_SEQUENCE
        condition:
          function: equal
          parameters:
          - '[str1, $(CURIEIdentifier SUBJECT ID), s]'
          - '[str2, $(CURIEIdentifier OBJECT ID), o]'
    - p: obo:NCIT_C25543
      o:
        mapping: SequenceInterval [1..1],INTERVAL
        condition:
          function: equal
          parameters:
          - '[str1, $(SequenceInterval SUBJECT ID), s]'
          - '[str2, $(SequenceInterval OBJECT ID), o]'
  ChromosomeLocation:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :chromosomelocation_$(IDENTIFIER)
    po:
    - p: dcterms:identifier
      o:
        mapping: CURIEIdentifier [0..1],IDENTIFIER
        condition:
          function: equal
          parameters:
          - '[str1, $(CURIEIdentifier SUBJECT ID), s]'
          - '[str2, $(CURIEIdentifier OBJECT ID), o]'
    - p: obo:NCIT_C45293
      o:
        mapping: CURIEIdentifier [1..1],SPECIES
        condition:
          function: equal
          parameters:
          - '[str1, $(CURIEIdentifier SUBJECT ID), s]'
          - '[str2, $(CURIEIdentifier OBJECT ID), o]'
    - p: phenop:chr
      o:
        value: $(CHR)[1..1]
        datatype: xsd:string
    - p: obo:NCIT_C25543
      o:
        mapping: CytobandInterval [1..1],INTERVAL
        condition:
          function: equal
          parameters:
          - '[str1, $(CytobandInterval SUBJECT ID), s]'
          - '[str2, $(CytobandInterval OBJECT ID), o]'
  IntegerNumber:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :integernumber_$(IDENTIFIER)
    po:
    - p: sio:SIO_000300
      o:
        value: $(HAS_VALUE)[1..1]
        datatype: xsd:integer
  DefiniteRange:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :definiterange_$(IDENTIFIER)
    po:
    - p: sio:SIO_001113
      o:
        value: $(MIN)[1..1]
        datatype: xsd:integer
    - p: sio:SIO_001114
      o:
        value: $(MAX)[1..1]
        datatype: xsd:integer
  IndefiniteRange:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :indefiniterange_$(IDENTIFIER)
    po:
    - p: sio:SIO_000300
      o:
        value: $(HAS_VALUE)[1..1]
        datatype: xsd:integer
    - p: phenop:comparator
      o:
        value: $(COMPARATOR)[1..1]
        datatype: xsd:string
  LiteralSequenceExpression:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :literalsequenceexpression_$(IDENTIFIER)
    po:
    - p: obo:NCIT_C25673
      o:
        value: $(SEQUENCE)[1..1]
        datatype: xsd:string
  DerivedSequenceExpression:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :derivedsequenceexpression_$(IDENTIFIER)
    po:
    - p: obo:NCIT_C25341
      o:
        mapping: SequenceLocation [1..1],LOCATION
        condition:
          function: equal
          parameters:
          - '[str1, $(SequenceLocation SUBJECT ID), s]'
          - '[str2, $(SequenceLocation OBJECT ID), o]'
    - p: phenop:reverse_complement
      o:
        value: $(REVERSE_COMPLEMENT)[1..1]
        datatype: xsd:boolean
  RepeatedSequenceExpression:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :repeatedsequenceexpression_$(IDENTIFIER)
    po:
    - p: phenop:seq_expr
      o:
        mapping: MULTIPLE OPTIONS FOR MAPPED CLASS [1..1],SEQ_EXPR
        condition:
          function: equal
          parameters:
          - '[str1, $(MULTIPLE OPTIONS FOR MAPPED CLASS SUBJECT ID), s]'
          - '[str2, $(MULTIPLE OPTIONS FOR MAPPED CLASS OBJECT ID), o]'
    - p: sio:SIO_000794
      o:
        mapping: MULTIPLE OPTIONS FOR MAPPED CLASS [1..1],COUNT
        condition:
          function: equal
          parameters:
          - '[str1, $(MULTIPLE OPTIONS FOR MAPPED CLASS SUBJECT ID), s]'
          - '[str2, $(MULTIPLE OPTIONS FOR MAPPED CLASS OBJECT ID), o]'
  SequenceInterval:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :sequenceinterval_$(IDENTIFIER)
    po:
    - p: sio:SIO_000509
      o:
        mapping: MULTIPLE OPTIONS FOR MAPPED CLASS [1..1],START_POINT
        condition:
          function: equal
          parameters:
          - '[str1, $(MULTIPLE OPTIONS FOR MAPPED CLASS SUBJECT ID), s]'
          - '[str2, $(MULTIPLE OPTIONS FOR MAPPED CLASS OBJECT ID), o]'
    - p: sio:SIO_000508
      o:
        mapping: MULTIPLE OPTIONS FOR MAPPED CLASS [1..1],END_POINT
        condition:
          function: equal
          parameters:
          - '[str1, $(MULTIPLE OPTIONS FOR MAPPED CLASS SUBJECT ID), s]'
          - '[str2, $(MULTIPLE OPTIONS FOR MAPPED CLASS OBJECT ID), o]'
  VariationSet:
    sources:
    - access: FILE.json
      referenceFormulation: jsonpath
      iterator: $.ENTITY[*]
    s: :variationset_$(IDENTIFIER)
    po:
    - p: dcterms:identifier
      o:
        mapping: CURIEIdentifier [0..1],IDENTIFIER
        condition:
          function: equal
          parameters:
          - '[str1, $(CURIEIdentifier SUBJECT ID), s]'
          - '[str2, $(CURIEIdentifier OBJECT ID), o]'
    - p: phenop:member
      o:
        mapping: MULTIPLE OPTIONS FOR MAPPED CLASS [0..*],MEMBER
        condition:
          function: equal
          parameters:
          - '[str1, $(MULTIPLE OPTIONS FOR MAPPED CLASS SUBJECT ID), s]'
          - '[str2, $(MULTIPLE OPTIONS FOR MAPPED CLASS OBJECT ID), o]'
